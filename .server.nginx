server {
  listen 80;
  listen [::]:80;

  server_name sebestovalucie.cz;

  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name sebestovalucie.cz;
  root /var/www/sebestovalucie-cz/dist;
  index index.php;

	# Copy from pkg python3-certbot-nginx
  include /etc/nginx/options-ssl-nginx.conf;
  ssl_certificate /etc/letsencrypt/live/sebestovalucie.cz/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/sebestovalucie.cz/privkey.pem;

	location ~ ^/xhr/index\.php(/|$) {
    include snippets/fastcgi-php.conf;

    fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;

    # When you are using symlinks to link the document root to the
    # current version of your application, you should pass the real
    # application path instead of the path to the symlink to PHP
    # FPM.
    # Otherwise, PHP's OPcache may not properly detect changes to
    # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
    # for more information).
    # Caveat: When PHP-FPM is hosted on a different machine from nginx
    #         $realpath_root may not resolve as you expect! In this case try using
    #         $document_root instead.
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT $realpath_root;

    # Prevents URIs that include the front controller. This will 404:
    # http://domain.tld/index.php/some-path
    # Remove the internal directive to allow URIs like this
    internal;
  }

  # return 404 for all other php files not matching the front controller
  # this prevents access to other php files you don't want to be accessible.
  location ~ \.php$ {
      return 404;
  }

  error_log /var/log/nginx/error-sebestovalucie-cz.log;
  access_log /var/log/nginx/access-sebestovalucie-cz.log.gz combined gzip;
}

